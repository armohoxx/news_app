//
//  NewsDetailViewController.swift
//  news_app
//
//  Created Phattarapon Jungtakarn on 22/7/2566 BE.
//  Copyright © 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class NewsDetailViewController: UIViewController {

	var presenter: NewsDetailPresenterProtocol?
    var newsDetail: ArticlesEntity?
    let fontDetail = UIFont.systemFont(ofSize: 16.0, weight: .regular)
    
    @IBOutlet weak var collectionNewsDetail: UICollectionView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.initUI()
    }
    
    func initUI() {
        self.setupNavbar()
        let nibNewsCell = UINib(nibName: "MainNewsCell", bundle: nil)
        self.collectionNewsDetail.register(nibNewsCell, forCellWithReuseIdentifier: "MainNewsCell")
    }
    
    func setupNavbar() {
        self.navigationController?.navigationBar.isHidden = false
        self.navigationItem.title = "Details"
        
        let imageBack = UIImage(named: "ic_back")?.tinted(with: UIColor.white)
        
        let leftBarButton = UIBarButtonItem(
            image: imageBack?.withRenderingMode(.alwaysOriginal),
            style: .plain,
            target: self,
            action: #selector(onClickBackButton)
        )
        
        leftBarButton.setTitleTextAttributes([
            NSAttributedString.Key.font : UIFont.systemFont(ofSize: 25.0),
            NSAttributedString.Key.foregroundColor : UIColor.gray,
        ], for: .normal)
        
        self.navigationItem.leftBarButtonItems = [leftBarButton]
    }
    
    @objc func onClickBackButton() {
        self.presenter?.notifyRouteToMain()
    }

}

extension NewsDetailViewController: NewsDetailViewProtocol {
    
    func displayNewsDetail(news: ArticlesEntity) {
        self.newsDetail = news
    }
    
}

extension NewsDetailViewController: UICollectionViewDataSource, UICollectionViewDelegate {

    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return 1
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "MainNewsCell", for: indexPath) as! MainNewsCell
        
        if let news = self.newsDetail {
            cell.displayNewsDetail(newsData: news)
        }
        
        return cell
    }
    
}

extension NewsDetailViewController: UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        if let title = self.newsDetail?.title,
           let contentNews = self.newsDetail?.content,
           let publishedAt = self.newsDetail?.publishedAt {

            let titleSize: CGFloat = title.heightWithConstrainedWidth(width: self.collectionNewsDetail.frame.width - ConstraintNewsPage.DefaultConstraintLeftRight.cgFloatValue, font: self.fontDetail)
            let contentNewsSize: CGFloat = contentNews.heightWithConstrainedWidth(width: self.collectionNewsDetail.frame.width - ConstraintNewsPage.DefaultConstraintLeftRight.cgFloatValue, font: self.fontDetail)
            let publishedAtSize: CGFloat = publishedAt.heightWithConstrainedWidth(width: self.collectionNewsDetail.frame.width - ConstraintNewsPage.DefaultConstraintLeftRight.cgFloatValue, font: self.fontDetail)

            let height = (titleSize + contentNewsSize + publishedAtSize) + ConstraintNewsPage.DefaultSizeCell.cgFloatValue

            return CGSize(width: self.collectionNewsDetail.frame.width, height: height)
        } else {
            return CGSize(width: self.collectionNewsDetail.frame.width, height: 0)
        }
    }
    
}
